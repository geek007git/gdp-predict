# -*- coding: utf-8 -*-
"""country-forecast-model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/geek007git/5d1d714b90a2bf185f28dc0fc3ccd48f/country-forecast-model.ipynb
"""

import pandas as pd

df = pd.read_csv("/content/gdp.csv")
print(df.head())

df_long = df.melt(id_vars="Country", var_name="Year", value_name="Value")
df_long["Year"] = df_long["Year"].astype(int)
print(df_long.head())

df_long["Value"] = df_long.groupby("Country")["Value"].transform(lambda x: x.interpolate())

from sklearn.linear_model import LinearRegression
import numpy as np

future_years = np.arange(2026, 2031).reshape(-1, 1)  # 2026 → 2030
forecasts = {}

for country in df["Country"]:
    country_data = df_long[df_long["Country"] == country].dropna()

    X = country_data["Year"].values.reshape(-1, 1)
    y = country_data["Value"].values

    model = LinearRegression()
    model.fit(X, y)

    preds = model.predict(future_years)
    forecasts[country] = preds


forecast_df = pd.DataFrame(forecasts, index=range(2026, 2031))
print(forecast_df.head())

import matplotlib.pyplot as plt
import ipywidgets as widgets
from IPython.display import display


country_dropdown = widgets.Dropdown(
    options=sorted(df["Country"].unique()),
    description="Country:",
    style={'description_width': 'initial'},
    layout={'width': '400px'}
)


def plot_forecast(country):
    past = df_long[df_long["Country"] == country]

    plt.figure(figsize=(8,5))
    plt.plot(past["Year"], past["Value"], marker="o", label=f"{country} (Actual)")
    plt.plot(forecast_df.index, forecast_df[country], marker="x", linestyle="--", label=f"{country} (Forecast)")

    plt.xlabel("Year")
    plt.ylabel("Value")
    plt.title(f"Forecast for {country} (2020–2030)")
    plt.legend()
    plt.show()


widgets.interact(plot_forecast, country=country_dropdown)
print("all the value is in USD")